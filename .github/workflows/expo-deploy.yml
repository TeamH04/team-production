name: Mobile App - Expo Build & Deploy

on:
  push:
    branches: [main]
    paths:
      - 'apps/mobile/**'
      - '.github/workflows/expo-deploy.yml'
  pull_request:
    branches: [main]
    paths:
      - 'apps/mobile/**'

  # 手動実行も可能
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'preview'
        type: choice
        options:
          - preview
          - production

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  EXPO_CLI_VERSION: 'latest'
  NODE_VERSION: '20.x'

jobs:
  # ----- Build for different platforms -----
  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/mobile
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Expo CLI
        uses: expo/expo-github-action@v8
          expo-version: ${{ env.EXPO_CLI_VERSION }}
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Build for web
        run: |
          npx expo export --platform web --output-dir dist

      - name: Upload web build
        uses: actions/upload-artifact@v4
          name: web-build
          path: apps/mobile/dist
          retention-days: 7

  expo-preview:
    name: Expo Preview Build
    if: github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'preview')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/mobile
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Expo CLI
        uses: expo/expo-github-action@v8
          expo-version: ${{ env.EXPO_CLI_VERSION }}
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Create Expo Preview
        run: |
          # プレビューチャンネルを作成（PR番号を使用）
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            CHANNEL="pr-${{ github.event.number }}"
          else
            CHANNEL="preview-$(date +%Y%m%d-%H%M%S)"
          fi
          
          echo "Building preview for channel: $CHANNEL"
          npx eas update --branch=$CHANNEL --message="Preview build for ${{ github.event_name }}" --non-interactive || echo "EAS Update not configured, skipping..."
          
          # 代替：通常のExpo publishを使用
          # npx expo publish --release-channel=$CHANNEL --non-interactive

      - name: Comment PR with preview link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
          script: |
            const channel = `pr-${{ github.event.number }}`;
            const previewUrl = `exp://exp.host/@YOUR_EXPO_USERNAME/team-production?release-channel=${channel}`;
            
            const comment = `## 📱 Mobile Preview Available
            
            Your mobile app preview is ready! 
            
            **Preview Channel:** \`${channel}\`
            **Preview URL:** ${previewUrl}
            
            ### How to test:
            1. Install [Expo Go](https://expo.dev/client) on your device
            2. Open the preview URL above in Expo Go
            3. Or scan the QR code in the [Expo Dashboard](https://expo.dev)
            
            > This preview will be available until the PR is closed.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # ----- Production builds -----
  build-ios:
    name: Build iOS
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: macos-latest
    defaults:
      run:
        working-directory: apps/mobile
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Expo CLI
        uses: expo/expo-github-action@v8
          expo-version: ${{ env.EXPO_CLI_VERSION }}
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Build iOS
        run: |
          # EAS Buildを使用（推奨）
          if command -v eas &> /dev/null; then
            npx eas build --platform ios --non-interactive --wait
          else
            echo "EAS Build not configured. Setting up for future use..."
            echo "Run 'npx eas build:configure' to set up EAS Build"
          fi

  build-android:
    name: Build Android
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/mobile
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Expo CLI
        uses: expo/expo-github-action@v8
          expo-version: ${{ env.EXPO_CLI_VERSION }}
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Setup Java 17
        uses: actions/setup-java@v4
          distribution: 'temurin'
          java-version: '17'

      - name: Build Android
        run: |
          # EAS Buildを使用（推奨）
          if command -v eas &> /dev/null; then
            npx eas build --platform android --non-interactive --wait
          else
            echo "EAS Build not configured. Setting up for future use..."
            echo "Run 'npx eas build:configure' to set up EAS Build"
          fi

  # ----- Web deployment -----
  deploy-web:
    name: Deploy Web
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [build-web]
    environment: production
    
    steps:
      - name: Download web build
        uses: actions/download-artifact@v4
          name: web-build
          path: ./dist

      - name: Deploy to hosting platform
        run: |
          echo "Deploying to web hosting platform..."
          # 例：Vercel
          # npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
          
          # 例：Netlify
          # npx netlify deploy --prod --dir ./dist --auth ${{ secrets.NETLIFY_AUTH_TOKEN }}
          
          # 例：Firebase Hosting
          # npx firebase deploy --only hosting --token ${{ secrets.FIREBASE_TOKEN }}
          
          # 例：AWS S3 + CloudFront
          # aws s3 sync ./dist s3://${{ secrets.S3_BUCKET_NAME }} --delete
          # aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

  # ----- App Store deployment -----
  submit-ios:
    name: Submit to App Store
    if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    runs-on: ubuntu-latest
    needs: [build-ios]
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Expo CLI
        uses: expo/expo-github-action@v8
          expo-version: ${{ env.EXPO_CLI_VERSION }}
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Submit to App Store
        run: |
          cd apps/mobile
          npx eas submit --platform ios --latest --non-interactive

  submit-android:
    name: Submit to Play Store
    if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    runs-on: ubuntu-latest
    needs: [build-android]
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Expo CLI
        uses: expo/expo-github-action@v8
          expo-version: ${{ env.EXPO_CLI_VERSION }}
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Submit to Play Store
        run: |
          cd apps/mobile
          npx eas submit --platform android --latest --non-interactive